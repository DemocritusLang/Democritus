; ModuleID = 'MicroC'

%Circle = type <{ %Test_Struct, i32 }>
%Test_Struct = type <{ i32, i1, %Color }>
%Color = type <{ i32 }>

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"

declare i32 @printf(i8*, ...)

define i32 @main() {
entry:
  %a = alloca i32
  %b = alloca i32
  %c = alloca i32
  %d = alloca i32
  %e = alloca i32
  %circle = alloca %Circle
  %test = alloca %Test_Struct
  %test_color = alloca %Color
  %t = alloca i32
  %red = getelementptr inbounds %Color* %test_color, i32 0, i32 0
  store i32 696969, i32* %red
  %number = getelementptr inbounds %Test_Struct* %test, i32 0, i32 0
  store i32 10000000, i32* %number
  %test_color1 = load %Color* %test_color
  %color = getelementptr inbounds %Test_Struct* %test, i32 0, i32 2
  store %Color %test_color1, %Color* %color
  %test2 = load %Test_Struct* %test
  %extra_struct = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  store %Test_Struct %test2, %Test_Struct* %extra_struct
  %tip = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip3 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp = load %Test_Struct* %tip3
  %assign_val_store = alloca %Test_Struct
  %pointer_val = alloca %Test_Struct*
  store %Test_Struct %heretmp, %Test_Struct* %assign_val_store
  store %Test_Struct* %assign_val_store, %Test_Struct** %pointer_val
  %plz_val = load %Test_Struct** %pointer_val
  %in_assign = getelementptr inbounds %Test_Struct* %tip, i32 0, i32 0
  store i32 42, i32* %in_assign
  %tip4 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip5 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp6 = load %Test_Struct* %tip5
  %val_store = alloca %Test_Struct
  %pointer_val7 = alloca %Test_Struct*
  store %Test_Struct %heretmp6, %Test_Struct* %val_store
  store %Test_Struct* %val_store, %Test_Struct** %pointer_val7
  %plz_val8 = load %Test_Struct** %pointer_val7
  %in_dotop = getelementptr inbounds %Test_Struct* %tip4, i32 0, i32 2
  %tip9 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip10 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp11 = load %Test_Struct* %tip10
  %val_store12 = alloca %Test_Struct
  %pointer_val13 = alloca %Test_Struct*
  store %Test_Struct %heretmp11, %Test_Struct* %val_store12
  store %Test_Struct* %val_store12, %Test_Struct** %pointer_val13
  %plz_val14 = load %Test_Struct** %pointer_val13
  %in_dotop15 = getelementptr inbounds %Test_Struct* %tip9, i32 0, i32 2
  %temp = load %Color* %in_dotop15
  %assign_val_store16 = alloca %Color
  %pointer_val17 = alloca %Color*
  store %Color %temp, %Color* %assign_val_store16
  store %Color* %assign_val_store16, %Color** %pointer_val17
  %plz_val18 = load %Color** %pointer_val17
  %in_assign19 = getelementptr inbounds %Color* %in_dotop, i32 0, i32 0
  store i32 69, i32* %in_assign19
  %tip20 = getelementptr inbounds %Test_Struct* %test, i32 0, i32 2
  %tip21 = getelementptr inbounds %Test_Struct* %test, i32 0, i32 2
  %heretmp22 = load %Color* %tip21
  %val_store23 = alloca %Color
  %pointer_val24 = alloca %Color*
  store %Color %heretmp22, %Color* %val_store23
  store %Color* %val_store23, %Color** %pointer_val24
  %plz_val25 = load %Color** %pointer_val24
  %in_dotop26 = getelementptr inbounds %Color* %tip20, i32 0, i32 0
  %temp27 = load i32* %in_dotop26
  store i32 %temp27, i32* %a
  %tip28 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip29 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp30 = load %Test_Struct* %tip29
  %val_store31 = alloca %Test_Struct
  %pointer_val32 = alloca %Test_Struct*
  store %Test_Struct %heretmp30, %Test_Struct* %val_store31
  store %Test_Struct* %val_store31, %Test_Struct** %pointer_val32
  %plz_val33 = load %Test_Struct** %pointer_val32
  %in_dotop34 = getelementptr inbounds %Test_Struct* %tip28, i32 0, i32 2
  %tip35 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip36 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp37 = load %Test_Struct* %tip36
  %val_store38 = alloca %Test_Struct
  %pointer_val39 = alloca %Test_Struct*
  store %Test_Struct %heretmp37, %Test_Struct* %val_store38
  store %Test_Struct* %val_store38, %Test_Struct** %pointer_val39
  %plz_val40 = load %Test_Struct** %pointer_val39
  %in_dotop41 = getelementptr inbounds %Test_Struct* %tip35, i32 0, i32 2
  %temp42 = load %Color* %in_dotop41
  %val_store43 = alloca %Color
  %pointer_val44 = alloca %Color*
  store %Color %temp42, %Color* %val_store43
  store %Color* %val_store43, %Color** %pointer_val44
  %plz_val45 = load %Color** %pointer_val44
  %in_dotop46 = getelementptr inbounds %Color* %in_dotop34, i32 0, i32 0
  %temp47 = load i32* %in_dotop46
  store i32 %temp47, i32* %b
  %tip48 = getelementptr inbounds %Test_Struct* %test, i32 0, i32 0
  %heretmp49 = load i32* %tip48
  store i32 %heretmp49, i32* %c
  %tip50 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip51 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp52 = load %Test_Struct* %tip51
  %val_store53 = alloca %Test_Struct
  %pointer_val54 = alloca %Test_Struct*
  store %Test_Struct %heretmp52, %Test_Struct* %val_store53
  store %Test_Struct* %val_store53, %Test_Struct** %pointer_val54
  %plz_val55 = load %Test_Struct** %pointer_val54
  %in_dotop56 = getelementptr inbounds %Test_Struct* %tip50, i32 0, i32 0
  %temp57 = load i32* %in_dotop56
  store i32 %temp57, i32* %d
  %tip58 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip59 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp60 = load %Test_Struct* %tip59
  %val_store61 = alloca %Test_Struct
  %pointer_val62 = alloca %Test_Struct*
  store %Test_Struct %heretmp60, %Test_Struct* %val_store61
  store %Test_Struct* %val_store61, %Test_Struct** %pointer_val62
  %plz_val63 = load %Test_Struct** %pointer_val62
  %in_dotop64 = getelementptr inbounds %Test_Struct* %tip58, i32 0, i32 2
  %tip65 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip66 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp67 = load %Test_Struct* %tip66
  %val_store68 = alloca %Test_Struct
  %pointer_val69 = alloca %Test_Struct*
  store %Test_Struct %heretmp67, %Test_Struct* %val_store68
  store %Test_Struct* %val_store68, %Test_Struct** %pointer_val69
  %plz_val70 = load %Test_Struct** %pointer_val69
  %in_dotop71 = getelementptr inbounds %Test_Struct* %tip65, i32 0, i32 2
  %temp72 = load %Color* %in_dotop71
  %val_store73 = alloca %Color
  %pointer_val74 = alloca %Color*
  store %Color %temp72, %Color* %val_store73
  store %Color* %val_store73, %Color** %pointer_val74
  %plz_val75 = load %Color** %pointer_val74
  %in_dotop76 = getelementptr inbounds %Color* %in_dotop64, i32 0, i32 0
  %temp77 = load i32* %in_dotop76
  %tmp = add i32 %temp77, 1
  %tip78 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip79 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp80 = load %Test_Struct* %tip79
  %val_store81 = alloca %Test_Struct
  %pointer_val82 = alloca %Test_Struct*
  store %Test_Struct %heretmp80, %Test_Struct* %val_store81
  store %Test_Struct* %val_store81, %Test_Struct** %pointer_val82
  %plz_val83 = load %Test_Struct** %pointer_val82
  %in_dotop84 = getelementptr inbounds %Test_Struct* %tip78, i32 0, i32 2
  %tip85 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip86 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp87 = load %Test_Struct* %tip86
  %val_store88 = alloca %Test_Struct
  %pointer_val89 = alloca %Test_Struct*
  store %Test_Struct %heretmp87, %Test_Struct* %val_store88
  store %Test_Struct* %val_store88, %Test_Struct** %pointer_val89
  %plz_val90 = load %Test_Struct** %pointer_val89
  %in_dotop91 = getelementptr inbounds %Test_Struct* %tip85, i32 0, i32 2
  %temp92 = load %Color* %in_dotop91
  %assign_val_store93 = alloca %Color
  %pointer_val94 = alloca %Color*
  store %Color %temp92, %Color* %assign_val_store93
  store %Color* %assign_val_store93, %Color** %pointer_val94
  %plz_val95 = load %Color** %pointer_val94
  %in_assign96 = getelementptr inbounds %Color* %in_dotop84, i32 0, i32 0
  store i32 %tmp, i32* %in_assign96
  %tip97 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip98 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp99 = load %Test_Struct* %tip98
  %val_store100 = alloca %Test_Struct
  %pointer_val101 = alloca %Test_Struct*
  store %Test_Struct %heretmp99, %Test_Struct* %val_store100
  store %Test_Struct* %val_store100, %Test_Struct** %pointer_val101
  %plz_val102 = load %Test_Struct** %pointer_val101
  %in_dotop103 = getelementptr inbounds %Test_Struct* %tip97, i32 0, i32 2
  %tip104 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %tip105 = getelementptr inbounds %Circle* %circle, i32 0, i32 0
  %heretmp106 = load %Test_Struct* %tip105
  %val_store107 = alloca %Test_Struct
  %pointer_val108 = alloca %Test_Struct*
  store %Test_Struct %heretmp106, %Test_Struct* %val_store107
  store %Test_Struct* %val_store107, %Test_Struct** %pointer_val108
  %plz_val109 = load %Test_Struct** %pointer_val108
  %in_dotop110 = getelementptr inbounds %Test_Struct* %tip104, i32 0, i32 2
  %temp111 = load %Color* %in_dotop110
  %val_store112 = alloca %Color
  %pointer_val113 = alloca %Color*
  store %Color %temp111, %Color* %val_store112
  store %Color* %val_store112, %Color** %pointer_val113
  %plz_val114 = load %Color** %pointer_val113
  %in_dotop115 = getelementptr inbounds %Color* %in_dotop103, i32 0, i32 0
  %temp116 = load i32* %in_dotop115
  store i32 %temp116, i32* %e
  %a117 = load i32* %a
  %printf = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmt, i32 0, i32 0), i32 %a117)
  %b118 = load i32* %b
  %printf119 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmt, i32 0, i32 0), i32 %b118)
  %c120 = load i32* %c
  %printf121 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmt, i32 0, i32 0), i32 %c120)
  %d122 = load i32* %d
  %printf123 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmt, i32 0, i32 0), i32 %d122)
  %e124 = load i32* %e
  %printf125 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @fmt, i32 0, i32 0), i32 %e124)
  ret i32 0
}
